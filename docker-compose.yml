version: "3.8"
services:
  #############################################################  PRODUCT  ##################################################
  product:
    build: .
    ports:
      - 8010:8080
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgresdb:5432/products"
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "root"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: "org.hibernate.dialect.PostgreSQLDialect"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    depends_on:
      postgresdb-app:
        condition: service_healthy
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - kafka-network

  postgresdb-app:
    image: postgres:latest
    container_name: postgresdb
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=products
    ports:
      - '5431:5432'
    volumes:
      - pg-data-products:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d products"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-network



  #############################################  KAFKA , ZOOKEEPER  ####################################
  zookeeper:
    image: bitnami/zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  ###########################################  DB UI  ################################################
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgresdb-app
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '8081:80'
    networks:
      - kafka-network

volumes:
  pg-data-products:
  pg-data-order:

networks:
  kafka-network:
